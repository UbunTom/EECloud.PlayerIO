// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CreateJoinRoomOutput.proto

#ifndef PROTOBUF_CreateJoinRoomOutput_2eproto__INCLUDED
#define PROTOBUF_CreateJoinRoomOutput_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ServerEndpoint.pb.h"
// @@protoc_insertion_point(includes)

namespace EECloud {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CreateJoinRoomOutput_2eproto();
void protobuf_AssignDesc_CreateJoinRoomOutput_2eproto();
void protobuf_ShutdownFile_CreateJoinRoomOutput_2eproto();

class CreateJoinRoomOutput;

// ===================================================================

class CreateJoinRoomOutput : public ::google::protobuf::Message {
 public:
  CreateJoinRoomOutput();
  virtual ~CreateJoinRoomOutput();
  
  CreateJoinRoomOutput(const CreateJoinRoomOutput& from);
  
  inline CreateJoinRoomOutput& operator=(const CreateJoinRoomOutput& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateJoinRoomOutput& default_instance();
  
  void Swap(CreateJoinRoomOutput* other);
  
  // implements Message ----------------------------------------------
  
  CreateJoinRoomOutput* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateJoinRoomOutput& from);
  void MergeFrom(const CreateJoinRoomOutput& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline const ::std::string& roomid() const;
  inline void set_roomid(const ::std::string& value);
  inline void set_roomid(const char* value);
  inline void set_roomid(const char* value, size_t size);
  inline ::std::string* mutable_roomid();
  inline ::std::string* release_roomid();
  
  // optional string JoinKey = 2;
  inline bool has_joinkey() const;
  inline void clear_joinkey();
  static const int kJoinKeyFieldNumber = 2;
  inline const ::std::string& joinkey() const;
  inline void set_joinkey(const ::std::string& value);
  inline void set_joinkey(const char* value);
  inline void set_joinkey(const char* value, size_t size);
  inline ::std::string* mutable_joinkey();
  inline ::std::string* release_joinkey();
  
  // repeated .EECloud.ServerEndpoint Endpoints = 3;
  inline int endpoints_size() const;
  inline void clear_endpoints();
  static const int kEndpointsFieldNumber = 3;
  inline const ::EECloud::ServerEndpoint& endpoints(int index) const;
  inline ::EECloud::ServerEndpoint* mutable_endpoints(int index);
  inline ::EECloud::ServerEndpoint* add_endpoints();
  inline const ::google::protobuf::RepeatedPtrField< ::EECloud::ServerEndpoint >&
      endpoints() const;
  inline ::google::protobuf::RepeatedPtrField< ::EECloud::ServerEndpoint >*
      mutable_endpoints();
  
  // @@protoc_insertion_point(class_scope:EECloud.CreateJoinRoomOutput)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_joinkey();
  inline void clear_has_joinkey();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* roomid_;
  ::std::string* joinkey_;
  ::google::protobuf::RepeatedPtrField< ::EECloud::ServerEndpoint > endpoints_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_CreateJoinRoomOutput_2eproto();
  friend void protobuf_AssignDesc_CreateJoinRoomOutput_2eproto();
  friend void protobuf_ShutdownFile_CreateJoinRoomOutput_2eproto();
  
  void InitAsDefaultInstance();
  static CreateJoinRoomOutput* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateJoinRoomOutput

// optional string RoomId = 1;
inline bool CreateJoinRoomOutput::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateJoinRoomOutput::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateJoinRoomOutput::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateJoinRoomOutput::clear_roomid() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    roomid_->clear();
  }
  clear_has_roomid();
}
inline const ::std::string& CreateJoinRoomOutput::roomid() const {
  return *roomid_;
}
inline void CreateJoinRoomOutput::set_roomid(const ::std::string& value) {
  set_has_roomid();
  if (roomid_ == &::google::protobuf::internal::kEmptyString) {
    roomid_ = new ::std::string;
  }
  roomid_->assign(value);
}
inline void CreateJoinRoomOutput::set_roomid(const char* value) {
  set_has_roomid();
  if (roomid_ == &::google::protobuf::internal::kEmptyString) {
    roomid_ = new ::std::string;
  }
  roomid_->assign(value);
}
inline void CreateJoinRoomOutput::set_roomid(const char* value, size_t size) {
  set_has_roomid();
  if (roomid_ == &::google::protobuf::internal::kEmptyString) {
    roomid_ = new ::std::string;
  }
  roomid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateJoinRoomOutput::mutable_roomid() {
  set_has_roomid();
  if (roomid_ == &::google::protobuf::internal::kEmptyString) {
    roomid_ = new ::std::string;
  }
  return roomid_;
}
inline ::std::string* CreateJoinRoomOutput::release_roomid() {
  clear_has_roomid();
  if (roomid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = roomid_;
    roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string JoinKey = 2;
inline bool CreateJoinRoomOutput::has_joinkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateJoinRoomOutput::set_has_joinkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateJoinRoomOutput::clear_has_joinkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateJoinRoomOutput::clear_joinkey() {
  if (joinkey_ != &::google::protobuf::internal::kEmptyString) {
    joinkey_->clear();
  }
  clear_has_joinkey();
}
inline const ::std::string& CreateJoinRoomOutput::joinkey() const {
  return *joinkey_;
}
inline void CreateJoinRoomOutput::set_joinkey(const ::std::string& value) {
  set_has_joinkey();
  if (joinkey_ == &::google::protobuf::internal::kEmptyString) {
    joinkey_ = new ::std::string;
  }
  joinkey_->assign(value);
}
inline void CreateJoinRoomOutput::set_joinkey(const char* value) {
  set_has_joinkey();
  if (joinkey_ == &::google::protobuf::internal::kEmptyString) {
    joinkey_ = new ::std::string;
  }
  joinkey_->assign(value);
}
inline void CreateJoinRoomOutput::set_joinkey(const char* value, size_t size) {
  set_has_joinkey();
  if (joinkey_ == &::google::protobuf::internal::kEmptyString) {
    joinkey_ = new ::std::string;
  }
  joinkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateJoinRoomOutput::mutable_joinkey() {
  set_has_joinkey();
  if (joinkey_ == &::google::protobuf::internal::kEmptyString) {
    joinkey_ = new ::std::string;
  }
  return joinkey_;
}
inline ::std::string* CreateJoinRoomOutput::release_joinkey() {
  clear_has_joinkey();
  if (joinkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = joinkey_;
    joinkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .EECloud.ServerEndpoint Endpoints = 3;
inline int CreateJoinRoomOutput::endpoints_size() const {
  return endpoints_.size();
}
inline void CreateJoinRoomOutput::clear_endpoints() {
  endpoints_.Clear();
}
inline const ::EECloud::ServerEndpoint& CreateJoinRoomOutput::endpoints(int index) const {
  return endpoints_.Get(index);
}
inline ::EECloud::ServerEndpoint* CreateJoinRoomOutput::mutable_endpoints(int index) {
  return endpoints_.Mutable(index);
}
inline ::EECloud::ServerEndpoint* CreateJoinRoomOutput::add_endpoints() {
  return endpoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EECloud::ServerEndpoint >&
CreateJoinRoomOutput::endpoints() const {
  return endpoints_;
}
inline ::google::protobuf::RepeatedPtrField< ::EECloud::ServerEndpoint >*
CreateJoinRoomOutput::mutable_endpoints() {
  return &endpoints_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EECloud

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CreateJoinRoomOutput_2eproto__INCLUDED
